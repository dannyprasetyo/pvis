/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package layout;

import db.DailyWorkDAO;
import db.EmployeeDAO;
import db.LoginDAO;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DailyWorkModel;
import model.EmployeeModel;
import model.LoginModel;
import utils.DBConnection;
import model.UserLogin;

/**
 *
 * @author desianggraenis
 */
public class DailyWorkForm extends javax.swing.JFrame {
    DailyWorkForm dailyWorkForm;
    public Connection cnt;
    DailyWorkModel dailyWorkModel;
    DefaultTableModel model;
    String dateStart = "", dateEnd = "";
    
    private String cmbnik;
    private String nik;
    
    public static final String SUCCEED_SAVE_DAILYWORK = "Data have been saved successfully!";
    public static final String FAILED_SAVE_DAILYWORK = "Failed to save data!";
    public static final String SUCCEED_DELETE_DAILYWORK = "Data have been deleted successfully!";
    public static final String FAILED_DELETE_DAILYWORK = "Failed to delete data!";
    public static final String SUCCEED_SAVE_DAILYWORK_CFM = "Data have been confirmed successfully!";
    public static final String FAILED_SAVE_DAILYWORK_CFM = "Failed to confirm data!";
    private static final String EMPTY_FIELD = "Please fill empty fields!";
    
    public static enum Act {
        QUERY,
        UPDATE,
        INSERT
    }
    
    DailyWorkDAO dao = new DailyWorkDAO();
    /**
     * Creates new form DailyWorkForm
     */
    public DailyWorkForm() {
        initComponents();
        UserLogin.setUserLogin(this.userName, this.userPosition);
        initCmbSpecification();
        //this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setVisible(true);
                
        DBConnection db = new DBConnection();
        model = new DefaultTableModel();
        this.jTable1.setModel(model);
        model.addColumn("NO");
        model.addColumn("NIK");
        model.addColumn("DAY");
        model.addColumn("HOURS");
        model.addColumn("SPECIFICATION");
        model.addColumn("CLASSIFICATION");
        model.addColumn("LOT NO");
        model.addColumn("MATERIAL QTY");
        model.addColumn("PROCESSED QTY");
        model.addColumn("FAULTY QTY");
        model.addColumn("NOTE");
        
        
        if(UserLogin.getUserPosition() == 0){
            cmbEmployee.addItem(UserLogin.getUserNik() +" - " +UserLogin.getUserName());
            cmbEmployee.setEnabled(false);
            
        } else {
            initCmbEmployee();            
        }
        
        setNikFilter();
        initTableDailyWork();
        setElementDailyWorkForm(Act.INSERT);
        
        cmbSpec.setLightWeightPopupEnabled(false);
        cmbEmployee.setLightWeightPopupEnabled(false);
    }

    public void initCmbEmployee(){
        EmployeeDAO dao = new EmployeeDAO();
        ResultSet res = dao.getAll();
        cmbEmployee.addItem("");
        try {
            while (res.next()) {                
                cmbEmployee.addItem(res.getString("emp_nik") +" - " +res.getString("emp_name"));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button1 = new java.awt.Button();
        jPanel2 = new javax.swing.JPanel();
        panel1 = new java.awt.Panel();
        label2 = new java.awt.Label();
        jLabel14 = new javax.swing.JLabel();
        userName = new java.awt.Label();
        userPosition = new java.awt.Label();
        btnLogout = new javax.swing.JLabel();
        panel2 = new java.awt.Panel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnFilter = new javax.swing.JButton();
        btnFilter1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cmbEmployee = new javax.swing.JComboBox();
        periodStart = new com.toedter.calendar.JDateChooser();
        periodEnd = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNik = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHours = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtLotNo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtMaterialQty = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtProcessedQty = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtFaultyQty = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtNote = new javax.swing.JTextField();
        txtClass = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cfmUserNik = new javax.swing.JTextField();
        cfmFlag = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();
        cfmUserName = new javax.swing.JTextField();
        cmbSpec = new javax.swing.JComboBox();
        txtDay = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnHome = new javax.swing.JLabel();

        button1.setLabel("button1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 725));
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 725));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(1090, 700));
        jPanel2.setMinimumSize(new java.awt.Dimension(1090, 700));
        jPanel2.setPreferredSize(new java.awt.Dimension(1090, 800));

        panel1.setBackground(new java.awt.Color(217, 228, 250));

        label2.setFont(new java.awt.Font("Verdana", 1, 33)); // NOI18N
        label2.setForeground(new java.awt.Color(56, 80, 119));
        label2.setText("PAYROLL SYSTEM");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ic_logo.png"))); // NOI18N

        userName.setAlignment(java.awt.Label.RIGHT);
        userName.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        userName.setForeground(new java.awt.Color(56, 80, 119));
        userName.setPreferredSize(new java.awt.Dimension(160, 29));
        userName.setText("Desi Anggraeni");

        userPosition.setAlignment(java.awt.Label.RIGHT);
        userPosition.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        userPosition.setForeground(new java.awt.Color(56, 80, 119));
        userPosition.setText("Manager Keuangan");

        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ic_user2.png"))); // NOI18N
        btnLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLogoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(2, 2, 2)
                            .addComponent(userPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnLogout))
                    .addComponent(jLabel14))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NO", "NIK", "DAY", "HOURS", "SPECIFICATION", "CLASSIFICATION", "LOT NO", "MATERIAL QTY", "PROCESSED QTY", "FAULTY QTY", "NOTE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(25);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filter"));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Period");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("To");

        btnFilter.setText("Filter");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        btnFilter1.setText("Reset");
        btnFilter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilter1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("NIK");

        periodStart.setToolTipText("yyyy-MM-dd");
        periodStart.setDateFormatString("yyyy-MM-dd");

        periodEnd.setToolTipText("yyyy-MM-dd");
        periodEnd.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(cmbEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(periodStart, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(periodEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFilter1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(periodEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1))
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbEmployee))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFilter)
                            .addComponent(btnFilter1))
                        .addGap(1, 1, 1)))
                .addGap(13, 13, 13))
        );

        jLabel11.getAccessibleContext().setAccessibleDescription("");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("NIK");

        txtNik.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNikFocusLost(evt);
            }
        });
        txtNik.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtNikInputMethodTextChanged(evt);
            }
        });

        txtName.setEditable(false);

        jLabel4.setText("Day");

        jLabel5.setText("Hours");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel15.setText("Specification");

        jLabel16.setText("Classification");

        jLabel17.setText("Lot No");

        jLabel18.setText("Material Qty");

        jLabel19.setText("Processed Qty");

        jLabel20.setText("Faulty Qty");

        jLabel21.setText("Note");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel3.setText("Confirm Flag");

        cfmUserNik.setEditable(false);
        cfmUserNik.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cfmUserNikFocusLost(evt);
            }
        });
        cfmUserNik.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                cfmUserNikInputMethodTextChanged(evt);
            }
        });

        cfmFlag.setSelected(true);
        cfmFlag.setEnabled(false);

        jLabel6.setText("Confirm User");

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        cfmUserName.setEditable(false);
        cfmUserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cfmUserNameFocusLost(evt);
            }
        });
        cfmUserName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                cfmUserNameInputMethodTextChanged(evt);
            }
        });

        txtDay.setToolTipText("YYYY-MM-DD");
        txtDay.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cfmUserNik, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cfmUserName))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbSpec, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDay, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                    .addComponent(txtNik))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtHours, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(30, 30, 30)
                                .addComponent(btnConfirm)
                                .addGap(26, 26, 26)
                                .addComponent(btnReset))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtLotNo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cfmFlag, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNote, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtProcessedQty, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtMaterialQty)
                                        .addComponent(txtFaultyQty, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(txtClass, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(txtHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cmbSpec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtClass))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLotNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(txtMaterialQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProcessedQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(txtFaultyQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cfmFlag)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cfmUserNik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cfmUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnReset)
                    .addComponent(btnConfirm))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Daily Work");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton4.setText("Refresh");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Daily Work's Form ");

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ic_home.png"))); // NOI18N
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(btnHome)
                        .addGap(58, 58, 58)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(29, 29, 29)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHome, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(jButton4)
                            .addComponent(btnUpdate)
                            .addComponent(btnAdd))
                        .addGap(18, 18, 18)))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1336, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        setElementDailyWorkForm(Act.INSERT);
    }//GEN-LAST:event_btnAddActionPerformed

    private boolean valdateForm(){
        boolean valid = false;
        if(!txtNik.getText().isEmpty() && txtDay.getDate() != null  && 
           !txtHours.getText().isEmpty() && !cmbSpec.getSelectedItem().toString().isEmpty() && 
           !txtClass.getText().isEmpty() && !txtLotNo.getText().isEmpty() && 
           !txtMaterialQty.getText().isEmpty() && !txtProcessedQty.getText().isEmpty() && 
           !txtFaultyQty.getText().isEmpty() && !txtNote.getText().isEmpty())
            valid = true;
        
        return valid;
    }
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(valdateForm() == false){
            JOptionPane.showMessageDialog(null, EMPTY_FIELD);
        }
        else {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            System.out.println("get Date : " + txtDay.getDate().toString());
            dailyWorkModel = new DailyWorkModel(
                                               (String) txtNik.getText(),
                                               sdf.format(txtDay.getDate()), //.getText(),
                                               Integer.valueOf((String) txtHours.getText()),
                                               cmbSpec.getSelectedIndex(),
                                               (String) txtClass.getText(),
                                               (String) txtLotNo.getText(),
                                               Integer.valueOf((String) txtMaterialQty.getText()),
                                               Integer.valueOf((String) txtProcessedQty.getText()),
                                               Integer.valueOf((String) txtFaultyQty.getText()),
                                               (String) txtNote.getText());

            System.out.println("dailyWork : " + dailyWorkModel);

            boolean res;

            res = dao.addOrUpdateDailyWork(dailyWorkModel);
            if(res)
                JOptionPane.showMessageDialog(null, SUCCEED_SAVE_DAILYWORK);
            else
                JOptionPane.showMessageDialog(null, FAILED_SAVE_DAILYWORK);

            setDataDailyWorkForm(dailyWorkModel, Act.QUERY);
            initTableDailyWork();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int i = this.jTable1.getSelectedRow();
        if(i==-1) 
            return;
        dailyWorkModel = dao.getDailyWorkByNikDay((String) model.getValueAt(i, 1),(String) model.getValueAt(i, 2));
        //dailyWorkModel = initTableDailyWorkByTablePosition(i);        
        
        System.out.println("i : "+ i);
        System.out.println("spec : " + dailyWorkModel.getSpesification());
        setDataDailyWorkForm(dailyWorkModel, Act.QUERY);
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        int i = this.jTable1.getSelectedRow();
        if(i==-1) 
            return;
        dailyWorkModel = dao.getDailyWorkByNikDay((String) model.getValueAt(i, 1),(String) model.getValueAt(i, 2));
        //dailyWorkModel = initTableDailyWorkByTablePosition(i);  
        System.out.println("spec : " + dailyWorkModel.getSpesification());
        setDataDailyWorkForm(dailyWorkModel, Act.UPDATE); 
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       boolean res = false;
       if(dailyWorkModel != null){
          res = dao.deleteDailyWork(dailyWorkModel);
          if(res)
            JOptionPane.showMessageDialog(null, SUCCEED_DELETE_DAILYWORK);
          else
            JOptionPane.showMessageDialog(null, FAILED_DELETE_DAILYWORK);
       }
       initTableDailyWork();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        setElementDailyWorkForm(Act.INSERT);
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtNikInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtNikInputMethodTextChanged
        txtName.setText(getEmpNameByNik(txtNik.getText()));
    }//GEN-LAST:event_txtNikInputMethodTextChanged

    private void txtNikFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNikFocusLost
        txtName.setText(getEmpNameByNik(txtNik.getText()));
    }//GEN-LAST:event_txtNikFocusLost

    private void btnHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        HomePage home = new HomePage();
        home.setVisible(true);
    }//GEN-LAST:event_btnHomeMouseClicked

    private void btnLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutMouseClicked
        this.setVisible(false);
        UserLogin.doLogout();
    }//GEN-LAST:event_btnLogoutMouseClicked
    
    private void setNikFilter(){
        cmbnik = cmbEmployee.getSelectedItem().toString();
        String[] parts = cmbnik.split(" ");
        nik = parts[0]; // 004
    }
    
    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
       
        if(cmbEmployee.getSelectedItem().toString().isEmpty() || periodStart.getDate() == null || periodEnd.getDate() == null){
            JOptionPane.showMessageDialog(null, EMPTY_FIELD);
        }
        else {
            setNikFilter();
            dateStart = sdf.format(periodStart.getDate());
            dateEnd = sdf.format(periodEnd.getDate());

            System.out.println("start: " + dateStart);
            System.out.println("end: " + dateEnd);
            System.out.println("nik: " + nik);
            initTableDailyWork();
        }
    }//GEN-LAST:event_btnFilterActionPerformed

    private void cfmUserNikFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cfmUserNikFocusLost
        cfmUserName.setText(getEmpNameByNik(cfmUserNik.getText()));
    }//GEN-LAST:event_cfmUserNikFocusLost

    private void cfmUserNikInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cfmUserNikInputMethodTextChanged
        cfmUserName.setText(getEmpNameByNik(cfmUserNik.getText()));
    }//GEN-LAST:event_cfmUserNikInputMethodTextChanged

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        
        dailyWorkModel = new DailyWorkModel(
                                           (String) txtNik.getText(),
                                           sdf.format(txtDay.getDate()),//getText(),
                                           Integer.valueOf((String) txtHours.getText()),
                                           cmbSpec.getSelectedIndex(),
                                           (String) txtClass.getText(),
                                           (String) txtLotNo.getText(),
                                           Integer.valueOf((String) txtMaterialQty.getText()),
                                           Integer.valueOf((String) txtProcessedQty.getText()),
                                           Integer.valueOf((String) txtFaultyQty.getText()),
                                           (String) txtNote.getText(),
                                            1,
                                            sdf.format(date),
                                            UserLogin.getUserNik());
        
        System.out.println("dailyWork : " + dailyWorkModel);
        
        boolean res;
        
        res = dao.addOrUpdateDailyWork(dailyWorkModel);
        System.out.println("confirm : " + res);
        
        if(res)
            JOptionPane.showMessageDialog(null, SUCCEED_SAVE_DAILYWORK_CFM);
        else
            JOptionPane.showMessageDialog(null, FAILED_SAVE_DAILYWORK_CFM);
        
        setDataDailyWorkForm(dailyWorkModel, Act.QUERY);
        initTableDailyWork();
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void cfmUserNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cfmUserNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cfmUserNameFocusLost

    private void cfmUserNameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cfmUserNameInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cfmUserNameInputMethodTextChanged

    private void btnFilter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilter1ActionPerformed
        periodStart.setDate(null);
        periodEnd.setDate(null);
        dateStart = "";
        dateEnd = "";
        cmbEmployee.setSelectedIndex(0);
        setNikFilter();
        initTableDailyWork();
    }//GEN-LAST:event_btnFilter1ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        periodStart.setDate(null);
        periodEnd.setDate(null);
        dateStart = "";
        dateEnd = "";
        cmbEmployee.setSelectedIndex(0);
        setNikFilter();
        initTableDailyWork();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        periodStart.setDate(null);
        periodEnd.setDate(null);
        dateStart = "";
        dateEnd = "";
        cmbEmployee.setSelectedIndex(0);
        setNikFilter();
        initTableDailyWork();
    }//GEN-LAST:event_jButton4ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DailyWorkForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DailyWorkForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DailyWorkForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DailyWorkForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new DailyWorkForm().setVisible(true);
                JFrame frame = new JFrame();
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.add(new DailyWorkForm());
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnFilter1;
    private javax.swing.JLabel btnHome;
    private javax.swing.JLabel btnLogout;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private java.awt.Button button1;
    private javax.swing.JCheckBox cfmFlag;
    private javax.swing.JTextField cfmUserName;
    private javax.swing.JTextField cfmUserNik;
    private javax.swing.JComboBox cmbEmployee;
    private javax.swing.JComboBox cmbSpec;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private java.awt.Label label2;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private com.toedter.calendar.JDateChooser periodEnd;
    private com.toedter.calendar.JDateChooser periodStart;
    private javax.swing.JTextField txtClass;
    private com.toedter.calendar.JDateChooser txtDay;
    private javax.swing.JTextField txtFaultyQty;
    private javax.swing.JTextField txtHours;
    private javax.swing.JTextField txtLotNo;
    private javax.swing.JTextField txtMaterialQty;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNik;
    private javax.swing.JTextField txtNote;
    private javax.swing.JTextField txtProcessedQty;
    private java.awt.Label userName;
    private java.awt.Label userPosition;
    // End of variables declaration//GEN-END:variables

//    private void initTableDailyWork(){
//       model.getDataVector().removeAllElements();
//       model.fireTableDataChanged();
//       
//       int index = 1;
//       ResultSet res = null;
//       res = dao.getAll();
//        try {
//            if(res!=null)
//            while(res.next()){
//                Object[] o = new Object[11];
//                o[0] = index++;
//                o[1] = res.getString(DailyWorkDAO.DW_EMP_NIK);
//                o[2] = res.getString(DailyWorkDAO.DW_WORK_DAY);
//                o[3] = res.getString(DailyWorkDAO.DW_WORK_HOURS);
//                o[4] = res.getString(DailyWorkDAO.DW_SPESIFICATION);
//                o[5] = res.getString(DailyWorkDAO.DW_CLASSIFICATION);
//                o[6] = res.getString(DailyWorkDAO.DW_LOT_NO);
//                o[7] = res.getString(DailyWorkDAO.DW_MATERIAL_INPUT_QTY);
//                o[8] = res.getString(DailyWorkDAO.DW_PROCESSED_QTY);
//                o[9] = res.getString(DailyWorkDAO.DW_FAULTY_QTY);
//                o[10] = res.getString(DailyWorkDAO.DW_NOTE);
//                model.addRow(o);
//            }
//            res.close();
//        } catch (SQLException ex) {
//            Logger.getLogger(DailyWorkForm.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
    
    private void initTableDailyWork() {
                
        DailyWorkModel[] dailyWorkModel = dao.getDailyWorkByField(dateStart, dateEnd, DailyWorkDAO.DW_EMP_NIK, nik, false);
        String[] columnNames = {"NO","NIK","DAY","HOURS","SPECIFICATION","CLASSIFICATION","LOT NO","MATERIAL QTY","PROCESSED QTY","FAULTY QTY","NOTE"};
        String[][] data = new String[dailyWorkModel.length][11];
        for(int i=0; i<dailyWorkModel.length;i++){
            data[i][0] = String.valueOf(i+1);
            data[i][1] = dailyWorkModel[i].getEmpNik();
            data[i][2] = dailyWorkModel[i].getWorkDay();
            data[i][3] = String.valueOf(dailyWorkModel[i].getWorkHours());
            data[i][4] = dailyWorkModel[i].getSpesificationString();
            data[i][5] = dailyWorkModel[i].getClassification();
            data[i][6] = dailyWorkModel[i].getLotNo();
            data[i][7] = String.valueOf(dailyWorkModel[i].getMaterialQty());
            data[i][8] = String.valueOf(dailyWorkModel[i].getProcessedQty());
            data[i][9] = String.valueOf(dailyWorkModel[i].getFaultyQty());
            data[i][10] = dailyWorkModel[i].getNote();
        }
        
        model = new DefaultTableModel(data, columnNames);
        this.jTable1.setModel(model);
              
    }
        
    public void initCmbSpecification(){   
        for(int i=0; i<DailyWorkModel.DwSpecification.length;i++)
            cmbSpec.addItem(DailyWorkModel.DwSpecification[i]);  
    }
    
    private void setDataDailyWorkForm(DailyWorkModel dailyWorkModel1, Act act){
        setElementDailyWorkForm(act);
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date date = null;
        try {
            date = format.parse(dailyWorkModel1.getWorkDay());
        } catch (ParseException ex) {
            Logger.getLogger(DailyWorkForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //this.dailyWorkModel.setWorkId(dailyWorkModel1.getWorkId()); 
        this.txtNik.setText(dailyWorkModel1.getEmpNik());
        //this.txtDay.setText(dailyWorkModel1.getWorkDay());
        this.txtDay.setDate(date);
        this.txtHours.setText(String.valueOf(dailyWorkModel1.getWorkHours()));
        //this.txtSpec.setText(dailyWorkModel1.getSpesification());
        this.cmbSpec.setSelectedIndex(dailyWorkModel1.getSpesification());
        this.txtClass.setText(dailyWorkModel1.getClassification());
        this.txtLotNo.setText(dailyWorkModel1.getLotNo());
        this.txtMaterialQty.setText(String.valueOf(dailyWorkModel1.getMaterialQty()));
        this.txtProcessedQty.setText(String.valueOf(dailyWorkModel1.getProcessedQty()));
        this.txtFaultyQty.setText(String.valueOf(dailyWorkModel1.getFaultyQty()));
        this.txtNote.setText(dailyWorkModel1.getNote());
        if(dailyWorkModel1.getConfirmFlag()==1){
            this.cfmFlag.setSelected(true);
            this.cfmFlag.setText(dailyWorkModel1.getConfirmDate());
            this.cfmUserNik.setText(dailyWorkModel1.getConfirmUser());
            this.cfmUserName.setText(getEmpNameByNik(dailyWorkModel1.getConfirmUser()));
            
            System.out.println("dailyWorkModel1.getConfirmUser() : " + dailyWorkModel1.getConfirmUser());
        }
        
        if(UserLogin.getUserPosition() != 1)
            this.btnConfirm.setEnabled(false);
        
        if(dailyWorkModel.getConfirmFlag() == 1 ){
            this.btnUpdate.setEnabled(false);
            this.btnDelete.setEnabled(false);
        }
        
        this.txtName.setText(getEmpNameByNik(dailyWorkModel1.getEmpNik()));
        
    }
     
    private void setElementDailyWorkForm(Act act){
        boolean status1, status2;
       
        switch(act){
            case QUERY:
                status1 = status2 = false;
                break;
            case UPDATE:
                status1 = false;
                status2 = true;
                this.btnConfirm.setEnabled(true);
                break;
            case INSERT:
                status1 = status2 = true;
                this.btnConfirm.setEnabled(false);
                break;
            default:
                status1 = status2 = false;
        }   
            
        
        this.txtName.setEditable(false);
        this.txtNik.setEditable(status1);
        this.txtDay.setEnabled(status2);
        //this.txtDay.setEditable(status2);
        this.txtHours.setEditable(status2);
        //this.txtSpec.setEditable(status2);
        this.cmbSpec.setSelectedIndex(0);
        this.cmbSpec.setEnabled(status2);
        this.txtClass.setEditable(status2);
        this.txtLotNo.setEditable(status2);
        this.txtMaterialQty.setEditable(status2);
        this.txtProcessedQty.setEditable(status2);
        this.txtFaultyQty.setEditable(status2);
        this.txtNote.setEditable(status2);
        //this.txtDay.setEditable(status2);
        this.txtHours.setEditable(status2);
        this.btnSave.setEnabled(status2);
//        this.btnConfirm.setEnabled(status2);
        this.btnReset.setEnabled(status2);
        this.btnDelete.setEnabled(!status2);
        this.btnUpdate.setEnabled(!status2);
        
        this.txtNik.setText("");
        this.txtName.setText("");
        //this.txtDay.setText("");
        this.txtDay.setDate(null);
        this.txtHours.setText("");
        //this.txtSpec.setText("");
        this.txtClass.setText("");
        this.txtLotNo.setText("");
        this.txtMaterialQty.setText("");
        this.txtProcessedQty.setText("");
        this.txtFaultyQty.setText("");
        this.txtNote.setText("");
        
        this.cfmFlag.setText("");
        this.cfmFlag.setSelected(false);
        this.cfmUserNik.setText("");
        this.cfmUserName.setText("");
        
        if(UserLogin.getUserPosition() != 1)
            this.btnConfirm.setEnabled(false);
        
        
        if(UserLogin.getUserPosition() == 0){
            this.txtNik.setText(UserLogin.getUserNik());
            this.txtName.setText(UserLogin.getUserName());
            this.txtNik.setEnabled(false);
            this.txtName.setEnabled(false);
        }
    }
    
    public String getEmpNameByNik(String nik){
        EmployeeDAO employeeDao = new EmployeeDAO();
        EmployeeModel employeeModel = new EmployeeModel();
        ResultSet res = null;
        String empName = "";
        
        if(!nik.isEmpty()){    
            employeeModel = employeeDao.getEmployeeByNik(nik);
            empName = employeeModel.getEmpName();
        }
        
        return empName;                
    }
    
}
